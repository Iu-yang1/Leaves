From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: violetc <58360096+s-yh-china@users.noreply.github.com>
Date: Wed, 8 May 2024 22:19:25 +0800
Subject: [PATCH] Bedrock break list


diff --git a/net/minecraft/server/MinecraftServer.java b/net/minecraft/server/MinecraftServer.java
index de9b2b92456466376186737914706df22e1578f5..7822cecf362cd8d430d90c0daac6e97c8a8d124b 100644
--- a/net/minecraft/server/MinecraftServer.java
+++ b/net/minecraft/server/MinecraftServer.java
@@ -1754,6 +1754,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
         profilerFiller.popPush("server gui refresh");
 
         org.leavesmc.leaves.protocol.core.LeavesProtocolManager.handleTick(); // Leaves - protocol
+        org.leavesmc.leaves.util.BreakBedrockList.endTick(); // Leaves - break bedrock list
 
         for (int i = 0; i < this.tickables.size(); i++) {
             this.tickables.get(i).run();
diff --git a/net/minecraft/server/ServerScoreboard.java b/net/minecraft/server/ServerScoreboard.java
index 16c3bace00357f67a1bc050d95f5a27ec165de93..8c85455783b2b5e9e58b40fa0b3c2cf23de0e2b2 100644
--- a/net/minecraft/server/ServerScoreboard.java
+++ b/net/minecraft/server/ServerScoreboard.java
@@ -150,6 +150,7 @@ public class ServerScoreboard extends Scoreboard {
     @Override
     public void onObjectiveAdded(Objective objective) {
         super.onObjectiveAdded(objective);
+        org.leavesmc.leaves.util.BreakBedrockList.onScoreboardAdd(objective); // Leaves - break bedrock list
         this.setDirty();
     }
 
@@ -166,6 +167,7 @@ public class ServerScoreboard extends Scoreboard {
     @Override
     public void onObjectiveRemoved(Objective objective) {
         super.onObjectiveRemoved(objective);
+        org.leavesmc.leaves.util.BreakBedrockList.onScoreboardRemove(objective); // Leaves - break bedrock list
         if (this.trackedObjectives.contains(objective)) {
             this.stopTrackingObjective(objective);
         }
diff --git a/net/minecraft/world/level/block/piston/PistonBaseBlock.java b/net/minecraft/world/level/block/piston/PistonBaseBlock.java
index 2b1d5328072710784d2399b523afcbcfb1d7f0cd..080b5611f7e71d4c18837fdacb2cc959ce0a442d 100644
--- a/net/minecraft/world/level/block/piston/PistonBaseBlock.java
+++ b/net/minecraft/world/level/block/piston/PistonBaseBlock.java
@@ -97,6 +97,11 @@ public class PistonBaseBlock extends DirectionalBlock {
     @Override
     public void setPlacedBy(Level level, BlockPos pos, BlockState state, LivingEntity placer, ItemStack stack) {
         if (!level.isClientSide) {
+            // Leaves start - break bedrock list
+            if (placer instanceof net.minecraft.world.entity.player.Player player) {
+                org.leavesmc.leaves.util.BreakBedrockList.onPlayerPlacePiston(level, player, pos);
+            }
+            // Leaves end - break bedrock list
             this.checkIfExtend(level, pos, state);
         }
     }
@@ -252,7 +257,13 @@ public class PistonBaseBlock extends DirectionalBlock {
                             }
                         }
                         // Paper end - Fix sticky pistons and BlockPistonRetractEvent
-                        level.removeBlock(pos.relative(direction), false);
+                        // Leaves start - break bedrock list
+                        BlockPos pos1 = pos.relative(direction);
+                        if (level.getBlockState(pos1).getBlock() == Blocks.BEDROCK) {
+                            org.leavesmc.leaves.util.BreakBedrockList.onPistonBreakBedrock(level, pos1);
+                        }
+                        level.removeBlock(pos1, false);
+                        // Leaves end - break bedrock list
                     } else {
                         this.moveBlocks(level, pos, direction, false);
                     }
@@ -261,6 +272,11 @@ public class PistonBaseBlock extends DirectionalBlock {
                 // Paper start - Protect Bedrock and End Portal/Frames from being destroyed; fix headless pistons breaking blocks
                 BlockPos headPos = pos.relative(direction);
                 if (io.papermc.paper.configuration.GlobalConfiguration.get().unsupportedSettings.allowPermanentBlockBreakExploits || level.getBlockState(headPos) == Blocks.PISTON_HEAD.defaultBlockState().setValue(FACING, direction)) { // double check to make sure we're not a headless piston.
+                    // Leaves start - break bedrock list
+                    if (level.getBlockState(headPos).getBlock() == Blocks.BEDROCK) {
+                        org.leavesmc.leaves.util.BreakBedrockList.onPistonBreakBedrock(level, headPos);
+                    }
+                    // Leaves end - break bedrock list
                     level.removeBlock(headPos, false);
                 } else {
                     ((ServerLevel) level).getChunkSource().blockChanged(headPos); // ... fix client desync
